<apex:page controller="PDFController">

    <script src="https://npmcdn.com/pdfjs-dist/build/pdf.js"></script>
    <!-- <apex:slds />
         -->

    <body>
        <div style="display:grid;place-items:center;">
            <div>
                <input id="pdffile" name="pdffile" type="file" />
                <button id="btn" onclick="convert()" style="background:rgb(1,118,211);color:white;border-radius:5px;padding:10px;border:0px solid black;font-size:0.75rem;font-weight:200;margin-left:100px;cursor:pointer;">Process Pdf</button>
                <div id="result"></div>
            </div>
        </div>
    </body>

    <script>      

        function convert() {
            var lexOrigin = '{!lexOrigin}';
            var fr = new FileReader();
            var pdff = new Pdf2TextClass();
            let extractedText = '';
            fr.onload = function () {
                pdff.pdfToText(fr.result, null, (text) => {
                    document.getElementById('result').innerText += "Pdf Text Extracted.";
                    extractedText += text;
                    extractedText = extractedText.replace("\n\n", '');
                    console.log(extractedText);

                    var message = {
                        name: 'SampleVFMessage',
                        payload: extractedText
                    }
                    window.parent.postMessage(message, lexOrigin);

                    var stringArray = extractedText.split('#');
                    console.log(stringArray);
                });

            }
            fr.readAsDataURL(document.getElementById('pdffile').files[0])

        }

        function Pdf2TextClass() {
            var self = this;
            this.complete = 0;

            this.pdfToText = function (data, callbackPageDone, callbackAllDone) {
                console.assert(data instanceof ArrayBuffer || typeof data == 'string');
                var loadingTask = pdfjsLib.getDocument(data);
                loadingTask.promise.then(function (pdf) {


                    var total = pdf._pdfInfo.numPages;
                    //callbackPageDone( 0, total );        
                    var layers = {};
                    for (i = 1; i <= total; i++) {
                        pdf.getPage(i).then(function (page) {
                            var n = page.pageNumber;
                            page.getTextContent().then(function (textContent) {

                                //console.log(textContent.items[0]);0
                                if (null != textContent.items) {
                                    var page_text = "";
                                    var last_block = null;
                                    for (var k = 0; k < textContent.items.length; k++) {
                                        var block = textContent.items[k];

                                        if (last_block != null && last_block.str[last_block.str.length - 1] != ' ') {
                                            if (block.x < last_block.x) {
                                                console.log('===========================================in If');
                                                page_text += "\r\n";                                            
}
                                            else if (last_block.y != block.y && (last_block.str.match(/^(\s?[a-zA-Z])$|^(.+\s[a-zA-Z])$/) == null)) {
                                                console.log('===========================================in ElseIf');
                                                page_text += ' ';                                            
}
                                        }
                                        page_text += block.str;
                                        console.log("page text: ", page_text);
                                        last_block = block;
                                        if (block.hasEOL) {
                                            page_text += "#";
                                        }
                                        else if (block.str == ' ') {
                                            page_text += "<>";
                                        }
                                        console.log("last block: ", last_block);
                                    }

                                    textContent != null && console.log("page " + n + " finished."); //" content: \n" + page_text);
                                    layers[n] = page_text + "\n\n";
                                }
                                ++self.complete;
                                //callbackPageDone( self.complete, total );
                                if (self.complete == total) {
                                    window.setTimeout(function () {
                                        var full_text = "";
                                        var num_pages = Object.keys(layers).length;
                                        for (var j = 1; j <= num_pages; j++)
                                            full_text += layers[j];
                                        callbackAllDone(full_text);
                                    }, 1000);
                                }
                            }); // end  of page.getTextContent().then
                        }); // end of page.then
                    } // of for
                });
            }; // end of pdfToText()
        }; // end of class

    </script>

</apex:page>